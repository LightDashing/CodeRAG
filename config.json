{
   "indexing": {
    "doc_loading": {
        "name": "TextLoader",
        "module": "langchain_community.document_loaders.text",
        "params": {
            "file_path": "data/sample.py"
        }
    },
    "doc_splitting": {
        "name": "RecursiveCharacterTextSplitter",
        "module": "langchain_text_splitters.character",
        "params": {
            "language": "python",
            "chunk_size": 512
        }
    },
    "doc_embedd": {
        "name": "HuggingFaceEmbeddingModel",
        "model_name": "mixedbread-ai/mxbai-embed-large-v1"
    },
    "doc_storing":{
        "name": "Qdrant",
        "module": "langchain.vectorstores.qdrant",
        "params": {
            "path":"data/local_qdrant", 
            "collection_name":"my_docs"
        }
    }
   },
   "generation":{
    "model": {
        "llm_model": {
            "name": "snorkelai/Snorkel-Mistral-PairRM-DPO",
            "params": {
                "device_map": "auto"
            }
        },
        "task": "text-generation",
        "pipeline_params":{
            "max_length": 1024,
            "max_new_tokens": 512
        },
        "use_quantization": true,
        "quantization_config":{
            "load_in_4_bit": true,
            "bnb_4bit_quant_type":"nf4",
            "bnb_4bit_use_double_quant":true
        }
    },
    "llm_pipeline":{
        "QA_prompt": "Answer the question. If you don't know the answer, just say that you don't know, don't try to make up an answer. \n Question: <QUESTION> \n Helpful Answer:",
        "chain": {
            "name": "ConversationalRetrievalChain",
            "module": "langchain.chains",
            "params":{

            }
        },
        "use_memory": true,
        "llm_memory":{
            "name": "ConversationSummaryMemory",
            "module": "langchain.memory",
            "params": {
                "return_messages": true,
                "memory_key": "chat_history"
            }
        }
    }
   }
}